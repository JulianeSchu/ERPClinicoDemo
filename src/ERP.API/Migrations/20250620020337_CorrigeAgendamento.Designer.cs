// <auto-generated />
using System;
using ERP.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250620020337_CorrigeAgendamento")]
    partial class CorrigeAgendamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ERP.API.Domain.Models.AgendamentoProcedimento", b =>
                {
                    b.Property<Guid>("AgendamentoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProcedimentoId")
                        .HasColumnType("char(36)");

                    b.HasKey("AgendamentoId", "ProcedimentoId");

                    b.HasIndex("ProcedimentoId");

                    b.ToTable("AgendamentosProcedimentos");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.Convenio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("convenios");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.PacienteConvenio", b =>
                {
                    b.Property<Guid>("PacienteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ConvenioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PacienteId", "ConvenioId");

                    b.HasIndex("ConvenioId");

                    b.ToTable("PacientesConvenios");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.Procedimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("DuracaoEstimada")
                        .HasColumnType("time(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProfissionalId1")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ProfissionalId1");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("ERP.API.Models.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ConvenioId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PacienteId1")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProfissionalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ProfissionalId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("PacienteId1");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ProfissionalId1");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("ERP.API.Models.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ERP.API.Models.Profissional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.AgendamentoProcedimento", b =>
                {
                    b.HasOne("ERP.API.Models.Agendamento", "Agendamento")
                        .WithMany("AgendamentosProcedimentos")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.API.Domain.Models.Procedimento", "Procedimento")
                        .WithMany("AgendamentosProcedimentos")
                        .HasForeignKey("ProcedimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Procedimento");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.PacienteConvenio", b =>
                {
                    b.HasOne("ERP.API.Domain.Models.Convenio", "Convenio")
                        .WithMany("PacienteConvenios")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.API.Models.Paciente", "Paciente")
                        .WithMany("PacienteConvenios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.Procedimento", b =>
                {
                    b.HasOne("ERP.API.Models.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.API.Models.Profissional", null)
                        .WithMany("Procedimentos")
                        .HasForeignKey("ProfissionalId1");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("ERP.API.Models.Agendamento", b =>
                {
                    b.HasOne("ERP.API.Domain.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.API.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.API.Models.Paciente", null)
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId1");

                    b.HasOne("ERP.API.Models.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.API.Models.Profissional", null)
                        .WithMany("Agendamentos")
                        .HasForeignKey("ProfissionalId1");

                    b.Navigation("Convenio");

                    b.Navigation("Paciente");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.Convenio", b =>
                {
                    b.Navigation("PacienteConvenios");
                });

            modelBuilder.Entity("ERP.API.Domain.Models.Procedimento", b =>
                {
                    b.Navigation("AgendamentosProcedimentos");
                });

            modelBuilder.Entity("ERP.API.Models.Agendamento", b =>
                {
                    b.Navigation("AgendamentosProcedimentos");
                });

            modelBuilder.Entity("ERP.API.Models.Paciente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("PacienteConvenios");
                });

            modelBuilder.Entity("ERP.API.Models.Profissional", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Procedimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
